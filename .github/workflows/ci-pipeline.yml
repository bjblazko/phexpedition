name: Java QA with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:

  maven-validate:

    name: Validate and build
    runs-on: ubuntu-latest

    environment:
      name: Test

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Verify with Maven
        run: mvn -B clean compile --file pom.xml

  maven-test:

    name: Run (unit) tests
    runs-on: ubuntu-latest

    environment:
      name: Test

    needs: maven-validate

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Run tests with Maven
      run: mvn -B test -DskipTests=true --file pom.xml


  maven-sonarqube:

    name: Sonarqube code analysis
    runs-on: ubuntu-latest

    environment:
      name: Test

    needs: maven-validate

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run code analysis through Sonarqube with Maven
        run: mvn -B verify sonar:sonar --file pom.xml -Pcoverage -Dsonar.login=${{ secrets.SONAR_TOKEN }}


  deploy-test:

    name: Google Cloud - deploy to test
    runs-on: ubuntu-latest

    needs: [maven-test, maven-sonarqube]

    environment:
      name: Test
      url: ${{ vars.SERVICE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up GCP project and credentials
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_KEY }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ vars.SERVICE_NAME }} \
            --source . \
            --region ${{ vars.GOOGLE_REGION }} \
            --allow-unauthenticated \
            --set-env-vars AUTH_REDIRECT_URI=${{ vars.SERVICE_URL }} \
            --set-secrets AUTH_CLIENT_ID=AUTH_CLIENT_ID:latest


  deploy-beta:

    name: Google Cloud - deploy to beta
    runs-on: ubuntu-latest

    environment:
      name: Beta
      url: https://beta.phexpedition.net

    needs: [deploy-test]

    steps:
      - name: Print a variable
        run: echo "The value of my_variable is ${{ github.workspace }}"


  deploy-prod:

    name: Google Cloud - deploy to production
    runs-on: ubuntu-latest

    environment:
      name: Prod
      url: https://phexpedition.net

    needs: [deploy-test]

    steps:
      - name: Print a variable
        run: echo "The value of my_variable is ${{ github.workspace }}"